/*
// Definition for a Node.
class Node {
public:
    int val;
    Node* left;
    Node* right;

    Node() {}

    Node(int _val) {
        val = _val;
        left = NULL;
        right = NULL;
    }

    Node(int _val, Node* _left, Node* _right) {
        val = _val;
        left = _left;
        right = _right;
    }
};
*/
class Solution {
public:
    Node* treeToDoublyList(Node* root) {
        if(root==NULL)
        return NULL;
        stack<Node*> s;
        Node *head=NULL;
        Node *pre=NULL;
        while(s.empty()!=1||root)
        {
            while(root)
            {
                s.push(root);
                root=root->left;
            }
            root=s.top();
            s.pop();

            if(pre==NULL)
            {
                head=root;
                pre=root;
            }
            else
            {
                pre->right=root;
                root->left=pre;
                pre=root;
            }
            root=root->right;
        }
        head->left=pre;
        pre->right=head;
        return head;
    }
};
