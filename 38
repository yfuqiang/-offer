class Solution {
public:
    vector<string> permutation(string s) {
        sort(s.begin(),s.end());
        vector<int> visited(s.size());
        dfs(s,0,"",visited);
        return res;
    }
    void dfs(string s,int begin,string temp,vector<int> visited)
    {
        if(temp.size()==s.size())
       { res.push_back(temp);
       return;}
        int i;
        char pre=' ';
        for(i=0;i<s.size();i++)
        {
            if(visited[i]==1)
            continue;
            if(pre==s[i])
            continue;
            else
            {
                string k=temp;
                temp+=s[i];
                visited[i]=1;
                dfs(s,0,temp,visited);
                temp=k;
                visited[i]=0;
                pre=s[i];
            }
        }
    }

    vector<string> res;
};
