class Solution {
public:
    int reversePairs(vector<int>& nums) {
        vector<int> tmp(nums.size());
        return mergesort(nums,tmp,0,nums.size()-1);
        
    }
    int mergesort(vector<int> &nums,vector<int> &tmp,int left,int right)
    {
        if(left>=right)
        return 0;
        int mid=left+(right-left)/2;
        int count=mergesort(nums,tmp,left,mid)+mergesort(nums,tmp,mid+1,right);
        int i=left,j=mid+1,k=left;
        while(i<=mid&&j<=right)
        {
            if(nums[i]<=nums[j])
            {
                tmp[k++]=nums[i];
                i++;
                count+=(j-(mid+1));
            }
            else
            {
                tmp[k++]=nums[j];
                j++;
            }
        }
        if(j>right)
        {
            while(i<=mid)
            {tmp[k++]=nums[i];
            count+=(j-(mid+1));
            i++;
            }
        }
        if(i>mid)
        {
            while(j<=right)
            {
                tmp[k++]=nums[j++];
            }
        }
        copy(tmp.begin()+left,tmp.begin()+right+1,nums.begin()+left);
        return count;

    }
   
};
