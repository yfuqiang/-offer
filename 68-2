/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    TreeNode* lowestCommonAncestor(TreeNode* root, TreeNode* p, TreeNode* q) {
        vector<TreeNode*> path1;
        vector<TreeNode*> path2;
        getpath(root,p,path1);
        getpath(root,q,path2);
        TreeNode* res=NULL;
        int i=0,j=0;
        while(i<path1.size()&&j<path2.size())
        {
            if(path1[i]==path2[j])
           { res=path1[i];i++;j++;
           }
           else
           break;

        }
        return res;
    }
    bool getpath(TreeNode* root,TreeNode* s,vector<TreeNode*> &path)
    {
        if(root==NULL)
        return false;

        path.push_back(root);
        if(root==s)
        return true;
        if(getpath(root->left,s,path)||getpath(root->right,s,path))
        {
            return true;
        }
        else
        path.pop_back();
        return false;
    }
};
