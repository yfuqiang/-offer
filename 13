class Solution {
public:
    int x[4]={1,-1,0,0};
    int y[4]={0,0,1,-1};
    int movingCount(int m, int n, int k) {
        if(k<0)
        return 0;
        vector<vector<int>> visited(m,vector<int>(n));
        visited[0][0]=1;
        int sum=1;
        return dfs(visited,0,0,k,sum);
    }
    int dfs(vector<vector<int>> &visited,int i,int j,int k,int &sum)
    {
        for(int t=0;t<4;t++)
        {
            int ix=i+x[t];
            int iy=j+y[t];
            if(ix<0||ix>=visited.size()||iy<0||iy>=visited[0].size())
            continue;
            if(visited[ix][iy]==0&&calcu(ix,iy)<=k)
            {
                visited[ix][iy]=1;
                sum++;
                dfs(visited,ix,iy,k,sum);
                
            }
        }
        return sum;
    }
   int calcu(int x,int y)
    {
        int m=0,n=0;
        while(x!=0)
        {
            m+=x%10;
            x/=10;
        }
        while(y!=0)
        {
            n+=y%10;
            y/=10;
        }
        return m+n;
        
    }
};
