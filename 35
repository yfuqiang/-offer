/*
// Definition for a Node.
class Node {
public:
    int val;
    Node* next;
    Node* random;
    
    Node(int _val) {
        val = _val;
        next = NULL;
        random = NULL;
    }
};
*/
class Solution {
public:
    Node* copyRandomList(Node* head) {
        vector<pair<Node*,Node*>> next;
        Node* f=new Node(0);
        Node* pre=f;
        Node* head1=head;
        while(head)
        {
            Node* p=new Node(head->val);
            pre->next=p;
            next.push_back(pair{p,head});
            pre=p;
            head=head->next;
        }
        int i,j;
        
        for(i=0;i<next.size();i++)
        {
            Node *k=f->next;
            Node* a=next[i].second->random;
            if(a==NULL)
            continue;
            for(j=0;j<next.size();j++)
            {
                if(next[j].second==a)
                {
                    next[i].first->random=next[j].first;
                }
            }
        }
        return f->next;
    }
};
